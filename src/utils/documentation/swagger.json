{
  "swagger": "2.0",
  "info": {
    "title": "Cameya API",
    "version": "2.0.0",
    "description": "API for exclusive consumption by the Cameya frontend or third parties associated with the Cameya project, owned by Cameya SAS"
  },
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User registration",
        "description": "Register a new user in the Cameya platform",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "schema": {
              "$ref": "#/definitions/RegisterResponse"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login",
        "description": "Allows a user to log in with their email and password.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "credentials",
            "description": "Login credentials",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "$ref": "#/definitions/User"
                },
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error in login",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/google": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Google Login",
        "description": "Allows a user to log in with their Google account.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "googleDTO",
            "description": "Google login data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GoogleDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Google login",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "400": {
            "description": "Error in Google login",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/profile": {
      "post": {
        "tags": ["User"],
        "summary": "Get user's profile",
        "description": "Recieve user's profile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "dni": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile obtained",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "400": {
            "description": "Error updating user profile",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update user's profile",
        "description": "Update user's profile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error updating user profile",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/profile/profile_picture": {
      "post": {
        "tags": ["User"],
        "summary": "Upload user's profile picture",
        "description": "Upload user's profile picture (This endpoint is the same to User and Worker)",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "profile_picture",
            "in": "formData",
            "required": true,
            "type": "file"
          },
          {
            "name": "dni",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User profile picture uploaded successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error uploading user profile picture",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/score": {
      "get": {
        "tags": ["User"],
        "summary": "Get user's score",
        "description": "Recieve user's score",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "dni",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User score obtained",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Error obtaining user score",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update user's score",
        "description": "Update user's score",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "service_id": {
                  "type": "number"
                },
                "dni": {
                  "type": "string"
                },
                "score": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User score updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error updating user score",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/worker/profile": {
      "post": {
        "tags": ["Worker"],
        "summary": "Get worker's profile",
        "description": "Recieve worker's profile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "dni": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile obtained",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "$ref": "#/definitions/Worker"
                }
              }
            }
          },
          "400": {
            "description": "Error updating user profile",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Worker"],
        "summary": "Update worker's profile",
        "description": "Update worker's profile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Worker"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Worker profile updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error updating user profile",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/worker/score": {
      "get": {
        "tags": ["Worker"],
        "summary": "Get worker's profile",
        "description": "Recieve worker's profile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "dni",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Worker score obtained",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Error obtaining worker score",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Worker"],
        "summary": "Update worker's profile",
        "description": "Update worker's profile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "service_id": {
                  "type": "number"
                },
                "dni": {
                  "type": "string"
                },
                "score": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wroker score updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error updating worker score",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/service/all/{page}": {
      "get": {
        "tags": ["Services"],
        "summary": "Get all services by page",
        "description": "Recieve all services by page",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Services obtained",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "$ref": "#/definitions/ServiceAllGet"
                }
              }
            }
          },
          "400": {
            "description": "Error obtaining services",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/service/{id}":{
      "get": {
        "tags": ["Services"],
        "summary": "Get service by id",
        "description": "Recieve service by id",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Service obtained",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "$ref": "#/definitions/Service"
                }
              }
            }
          },
          "400": {
            "description": "Error obtaining service",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/service/create": {
      "post": {
        "tags": ["Services"],
        "summary": "Create a new service",
        "description": "Create a new service",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceMinimumPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error creating service",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/service/suser": {
      "post": {
        "tags": ["Services"],
        "summary": "Get services by user",
        "description": "Get services by user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "User DNI",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "dni": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Services obtained successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Service"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error obtaining services",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/service/sworker": {
      "post": {
        "tags": ["Services"],
        "summary": "Get services by worker",
        "description": "Get services by worker",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Worker DNI",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "dni": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Services obtained successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Service"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error obtaining services",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/service/updatePostulation": {
      "put": {
        "tags": ["Services"],
        "summary": "Update service postulation",
        "description": "Update service postulation",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Postulation Input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "id_worker": {
                  "type": "string"
                },
                "id_service": {
                  "type": "string"
                }
              }
            }
          }  
        ],
        "responses": {
          "200": {
            "description": "Service updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error updating service",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/service/scategory": {
      "post": {
        "tags": ["Services"],
        "summary": "Get services by category",
        "description": "Get services by category",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Category",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Services obtained successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Service"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error obtaining services",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/service/update": {
      "put": {
        "tags": ["Services"],
        "summary": "Update service",
        "description": "Update service",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Service",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error updating service",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/service/delete": {
      "delete": {
        "tags": ["Services"],
        "summary": "Delete service",
        "description": "Delete service",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Service",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error deleting service",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "RegisterRequest": {
      "type": "object",
      "properties": {
        "dni": {
          "type": "string"
        },
        "dni_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "profile_picture": {
          "type": "string"
        },
        "birth_date": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "default": 0
        },
        "is_worker": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "RegisterResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "dni": {
          "type": "string",
          "format": "id"
        },
        "dni_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "phone": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "profile_picture": {
          "type": "string"
        },
        "birth_date": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "float",
          "default": 0
        },
        "is_worker": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "Service": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 7
        },
        "date_programmed": {
          "type": "string",
          "format": "date-time",
          "example": "2023-06-16T10:00:00.000Z"
        },
        "address": {
          "type": "string",
          "example": "Dirección del servicio 1"
        },
        "total_price": {
          "type": "number",
          "format": "double",
          "example": 100
        },
        "service_status": {
          "type": "string",
          "example": "Not Assigned"
        },
        "client_score": {
          "type": "integer",
          "example": 0
        },
        "worker_score": {
          "type": "integer",
          "example": 0
        },
        "service_description": {
          "type": "string",
          "example": "Descripción del servicio 1"
        },
        "client_dni": {
          "type": "string",
          "example": "123456789"
        },
        "worker_dni": {
          "type": "string",
          "example": "0"
        },
        "service_title": {
          "type": "string",
          "nullable": true
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "User": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Usuario 1"
            },
            "last_name": {
              "type": "string",
              "example": "Apellido 1"
            },
            "email": {
              "type": "string",
              "example": "usuario1@example.com"
            },
            "profile_picture": {
              "type": "string",
              "format": "uri",
              "example": "https://www.example.com/profile_picture.jpg"
            },
            "score": {
              "type": "integer",
              "example": 0
            }
          }
        },
        "Worker": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "NN"
            },
            "last_name": {
              "type": "string",
              "example": "NN"
            },
            "email": {
              "type": "string",
              "example": "NN"
            },
            "profile_picture": {
              "type": "string",
              "example": "NN"
            }
          }
        }
      }
    },
    "ServiceMinimumPost": {
      "type": "object",
      "properties": {
        "date_programmed": {
          "type": "string",
          "format": "date-time",
          "example": "2023-06-16T10:00:00.000Z"
        },
        "address": {
          "type": "string",
          "example": "Dirección del servicio 1"
        },
        "total_price": {
          "type": "number",
          "format": "float",
          "example": 100
        },
        "service_status": {
          "type": "integer",
          "example": 0
        },
        "service_title": {
          "type": "string",
          "example": "Título del servicio 1"
        },
        "service_description": {
          "type": "string",
          "example": "Descripción del servicio 1"
        },
        "client_dni": {
          "type": "string",
          "example": "123456789"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["Plomería", "Carpintería"]
        }
      }
    },
    "ServiceAllGet": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 7
        },
        "date_programmed": {
          "type": "string",
          "format": "date-time",
          "example": "2023-06-16T10:00:00.000Z"
        },
        "total_price": {
          "type": "number",
          "format": "double",
          "example": 100
        },
        "service_description": {
          "type": "string",
          "example": "Descripción del servicio 1"
        },
        "service_title": {
          "type": "string",
          "nullable": true
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "User": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Usuario 1"
            },
            "last_name": {
              "type": "string",
              "example": "Apellido 1"
            },
            "profile_picture": {
              "type": "string",
              "format": "uri",
              "example": "https://www.example.com/profile_picture.jpg"
            },
            "score": {
              "type": "integer",
              "example": 0
            }
          }
        }
      }
    },
    "Worker": {
      "type": "object",
      "properties": {
        "user_dni": {
          "type": "string",
          "format": "id"
        },
        "service_type": {
          "type": "string"
        },
        "service_detail": {
          "type": "string"
        },
        "rate_hour": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleDTO": {
      "type": "object",
      "properties": {
        "iss": {
          "type": "string"
        },
        "nbf": {
          "type": "number"
        },
        "aud": {
          "type": "string"
        },
        "sub": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "email_verified": {
          "type": "boolean"
        },
        "azp": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "picture": {
          "type": "string"
        },
        "given_name": {
          "type": "string"
        },
        "family_name": {
          "type": "string"
        },
        "iat": {
          "type": "number"
        },
        "exp": {
          "type": "number"
        },
        "jti": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "API endpoints for user authentication"
    },
    {
      "name": "User",
      "description": "API endpoints for client actions (CRUD)"
    },
    {
      "name": "Worker",
      "description": "API endpoints for worker actions (CRUD)"
    },
    {
      "name": "Services",
      "description": "API endpoints for services interaction"
    }
  ]
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  email    String @id
  password String
}

model Service {
  id                  Int                  @id @default(autoincrement())
  date_programmed     DateTime
  address             String
  total_price         Float
  service_status      Int
  client_score        Float                @default(0)
  worker_score        Float                @default(0)
  service_description String
  client_dni          String
  worker_dni          String?
  service_title       String?
  categories          String[]
  User                User                 @relation(fields: [client_dni], references: [dni], onDelete: Cascade)
  Status              Status               @relation(fields: [service_status], references: [id])
  Worker              Worker?              @relation(fields: [worker_dni], references: [user_dni], onDelete: Cascade)
  WorkerPostulations  WorkerPostulations[]
}

model Status {
  id      Int       @id
  value   String
  Service Service[]
}

model User {
  dni             String    @id
  dni_type        String
  name            String
  last_name       String
  email           String    @unique
  password        String
  phone           String
  address         String
  profile_picture String
  birth_date      String
  score           Float     @default(0)
  is_worker       Boolean   @default(false)
  Service         Service[]
  Worker          Worker?
}

model Worker {
  user_dni           String               @id
  service_type       String
  service_detail     String
  rate_hour          Float
  Service            Service[]
  User               User                 @relation(fields: [user_dni], references: [dni], onDelete: Cascade)
  WorkerPostulations WorkerPostulations[]
}

model WorkerPostulations {
  service_id Int
  worker_dni String
  id         Int     @id @default(autoincrement())
  Service    Service @relation(fields: [service_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Service_fk")
  Worker     Worker  @relation(fields: [worker_dni], references: [user_dni], onDelete: NoAction, onUpdate: NoAction, map: "Worker_fk")
}
